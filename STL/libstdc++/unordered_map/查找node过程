--> _Hashtable::_M_find_node(__bkt, __key, __c: __hash_code)
| \ _M_find_node(__n, __k, __code):
    | \ __node_base* __before_n = _M_find_before_node(__bkt, __key, __c)
        | - __node_base* __prev_p = _M_buckets[__n]
        | \ if: !__prev_p
            | - return nulltpr
        | \ for: __p <- [static_cast<__node_type*>(__prev_p->_M_nxt), ...) next: __p->_M_next()
            | \ if: this->_M_equals(__k, __code, __p)
                | - return __prev_p
            | \ if: !__p->_M_nxt || _M_bucket_index(__p->_M_next()) != __n
                | - break
            | - __prev_p = __p
        | - return nullptr
    | \ if: __before_n
        | - return static_cast<__node_type*>(__before_n->_M_nxt)
    | - return nullptr